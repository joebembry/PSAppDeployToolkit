<ui:Page
    x:Class="iNKORE.UI.WPF.Modern.Gallery.Pages.Controls.Community.SettingsExpanderPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Gallery"
    xmlns:lc="clr-namespace:iNKORE.UI.WPF.Modern.Gallery.Pages.Controls.Community"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern" xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    Title="Border" d:DesignWidth="800"
    Loaded="Page_Loaded" mc:Ignorable="d">
    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="A simple SettingsExpander">
            <local:ControlExample.Example>
                <ikw:SimpleStackPanel Spacing="4">

                    <ui:SettingsExpander x:Name="settingsCard"
                            VerticalAlignment="Top"
                            Description="The SettingsExpander has the same properties as a Card, and you can set SettingsCard as part of the Items collection."
                            Header="SettingsExpander"
                            IsEnabled="{Binding ElementName=EnableToggle1, Path=IsOn}"
                            IsExpanded="{Binding ElementName=ExpandedToggle1, Path=IsOn, Mode=TwoWay}">
                        <ui:SettingsExpander.HeaderIcon>
                            <ui:FontIcon Glyph="&#xE91B;"/>
                        </ui:SettingsExpander.HeaderIcon>
                        <!--  TODO: This should be TwoWay bound but throws compile error in Uno.  -->
                        <ComboBox SelectedIndex="0">
                            <ComboBoxItem>Option 1</ComboBoxItem>
                            <ComboBoxItem>Option 2</ComboBoxItem>
                            <ComboBoxItem>Option 3</ComboBoxItem>
                        </ComboBox>

                        <ui:SettingsExpander.Items>
                            <ui:SettingsCard Header="A basic SettingsCard within an SettingsExpander">
                                <Button Content="Button" />
                            </ui:SettingsCard>
                            <ui:SettingsCard Description="SettingsCard within an Expander can be made clickable too!"
                                Header="This item can be clicked"
                                IsClickEnabled="True" />

                            <ui:SettingsCard ContentAlignment="Left">
                                <CheckBox Content="Here the ContentAlignment is set to Left. This is great for e.g. CheckBoxes or RadioButtons." />
                            </ui:SettingsCard>

                            <ui:SettingsCard HorizontalContentAlignment="Left"
                                ContentAlignment="Vertical"
                                Description="You can also align your content vertically. Make sure to set the HorizontalAlignment to Left when you do!"
                                Header="Vertically aligned">
                                <ui:GridView SelectedIndex="1">
                                    <ui:GridViewItem>
                                        <Border Width="64" Height="64"
                                            Background="#0078D4" CornerRadius="4" />
                                    </ui:GridViewItem>
                                    <ui:GridViewItem>
                                        <Border Width="64" Height="64"
                                            Background="#005EB7" CornerRadius="4" />
                                    </ui:GridViewItem>
                                    <ui:GridViewItem>
                                        <Border Width="64" Height="64"
                                            Background="#003D92" CornerRadius="4" />
                                    </ui:GridViewItem>
                                    <ui:GridViewItem>
                                        <Border Width="64" Height="64"
                                            Background="#001968" CornerRadius="4" />
                                    </ui:GridViewItem>
                                </ui:GridView>
                            </ui:SettingsCard>
                            <ui:SettingsCard Description="You can override the Left indention of a SettingsCard by overriding the SettingsCardLeftIndention"
                                Header="Customization">
                                <ui:SettingsCard.Resources>
                                    <sys:Double x:Key="SettingsCardLeftIndention">40</sys:Double>
                                </ui:SettingsCard.Resources>
                            </ui:SettingsCard>
                        </ui:SettingsExpander.Items>
                    </ui:SettingsExpander>


                </ikw:SimpleStackPanel>
            </local:ControlExample.Example>

            <local:ControlExample.Options>
                <ikw:SimpleStackPanel Spacing="8">
                    <ui:ToggleSwitch x:Name="EnableToggle1" Header="Is Enabled" IsOn="True" Toggled="EnableToggle1_Toggled"/>
                    <ui:ToggleSwitch x:Name="ExpandedToggle1" Header="Is Expanded" IsOn="False" Toggled="ExpandedToggle1_Toggled"/>
                </ikw:SimpleStackPanel>
            </local:ControlExample.Options>
        </local:ControlExample>

        <TextBlock Margin="0,15" TextWrapping="Wrap">
            You can easily override certain properties to create custom experiences. For instance, you can customize the 
            <Run FontWeight="Bold">ContentAlignment</Run> 
            of a
            <Run FontWeight="Bold">SettingsCard</Run>, 
            to align your content to the Right (default), Left (hiding the 
            <Run FontWeight="Bold">HeaderIcon</Run>,
            <Run FontWeight="Bold">Header</Run>,
            and
            <Run FontWeight="Bold">Description</Run>)
            or Vertically (usually best paired with changing the 
            <Run FontWeight="Bold">HorizontalAlignment</Run>
            to
            <Run FontWeight="Bold">Stretch</Run>).
            
            <LineBreak/>
            <LineBreak/>
   
            <Run FontWeight="Bold">SettingsExpander</Run>
             is also an 
            <Run FontWeight="Bold">ItemsControl</Run>, 
            so its items can be driven by a collection and the
            <Run FontWeight="Bold">ItemsSource</Run>
            property. You can use the
            <Run FontWeight="Bold">ItemTemplate</Run>
            to define how your data object is represented as a 
            <Run FontWeight="Bold">SettingsCard</Run>,
            as shown below. The 
            <Run FontWeight="Bold">ItemsHeader</Run>
            and 
            <Run FontWeight="Bold">ItemsFooter</Run>
            property can be used to host custom content at the start or end of the items list.
        </TextBlock>

        <local:ControlExample x:Name="Example2" HeaderText="A Series of Clickable SettingsCards">
            <local:ControlExample.Example>
                <ikw:SimpleStackPanel Spacing="4">

                    <ui:SettingsExpander Description="The SettingsExpander can use ItemsSource to define its Items."
                                   Header="Settings Expander with ItemsSource"
                                   DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ui:Page}}}"
                                   ItemsSource="{Binding MyDataSet}">
                        <ui:SettingsExpander.HeaderIcon>
                            
                            <ui:FontIcon Glyph="&#xEA37;"/>
                        </ui:SettingsExpander.HeaderIcon>
                        <ui:SettingsExpander.ItemTemplate>
                            <DataTemplate>
                                <ui:SettingsCard Description="{Binding Info}"
                                           Header="{Binding Name}">
                                    <ui:HyperlinkButton Content="{Binding LinkDescription}"
                                         NavigateUri="{Binding Url}" />
                                </ui:SettingsCard>
                            </DataTemplate>
                        </ui:SettingsExpander.ItemTemplate>
                        <ui:SettingsExpander.ItemsHeader>
                            <ui:InfoBar Title="This is the ItemsHeader"
                              BorderThickness="0"
                              CornerRadius="0"
                              IsIconVisible="False"
                              IsOpen="True"
                              Severity="Success">
                                <ui:InfoBar.ActionButton>
                                    <ui:HyperlinkButton Content="It can host custom content" />
                                </ui:InfoBar.ActionButton>
                            </ui:InfoBar>
                        </ui:SettingsExpander.ItemsHeader>
                        <!--<ui:SettingsExpander.ItemsFooter>
                            <ui:SettingsCard Header="This is the ItemsFooter">
                                <Button Content="Add a device" />
                            </ui:SettingsCard>
                        </ui:SettingsExpander.ItemsFooter>-->
                    </ui:SettingsExpander>

                    <ui:SettingsExpander Description="SettingsExpander can use a DataTemplate, DataTemplateSelector, or IElementFactory for its ItemTemplate."
                                   Header="Settings Expander with a custom ItemTemplate"
                                   DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ui:Page}}}"
                                   ItemsSource="{Binding MyDataSet}">
                        <ui:SettingsExpander.HeaderIcon>
                            <ui:FontIcon Glyph="&#xE8FD;"/>
                        </ui:SettingsExpander.HeaderIcon>
                        <ui:SettingsExpander.ItemTemplate>
                            <lc:MyDataModelTemplateSelector>
                                <lc:MyDataModelTemplateSelector.ButtonTemplate>
                                    <DataTemplate>
                                        <ui:SettingsCard Description="{Binding ItemType}"
                                                   Header="{Binding Name}">
                                            <Button Click="Button_Click"
                                        Content="{Binding LinkDescription}" />
                                        </ui:SettingsCard>
                                    </DataTemplate>
                                </lc:MyDataModelTemplateSelector.ButtonTemplate>

                                <lc:MyDataModelTemplateSelector.LinkButtonTemplate>
                                    <DataTemplate>
                                        <ui:SettingsCard Description="{Binding ItemType}"
                                                   Header="{Binding Name}">
                                            <ui:HyperlinkButton Content="{Binding LinkDescription}"
                                                 NavigateUri="{Binding Url}" />
                                        </ui:SettingsCard>
                                    </DataTemplate>
                                </lc:MyDataModelTemplateSelector.LinkButtonTemplate>

                                <lc:MyDataModelTemplateSelector.NoButtonTemplate>
                                    <DataTemplate>
                                        <ui:SettingsCard Description="{Binding ItemType}"
                                                   Header="{Binding Name}" />
                                    </DataTemplate>
                                </lc:MyDataModelTemplateSelector.NoButtonTemplate>
                            </lc:MyDataModelTemplateSelector>
                        </ui:SettingsExpander.ItemTemplate>
                    </ui:SettingsExpander>


                </ikw:SimpleStackPanel>
            </local:ControlExample.Example>
        </local:ControlExample>

        <TextBlock Margin="0,15" TextWrapping="Wrap">
            
            NOTE: Due to a bug related to the 
            <Run FontWeight="Bold">ItemsRepeater</Run>
            used in 
            <Run FontWeight="Bold">SettingsExpander</Run>, 
            there might be visual glitches whenever the 
            <Run FontWeight="Bold">SettingsExpander</Run>
            expands and a 
            <Run FontWeight="Bold">MaxWidth</Run>
            is set on a parent 
            <Run FontWeight="Bold">StackPanel</Run>.
            As a workaround, the 
            <Run FontWeight="Bold">StackPanel</Run>
            (that has the 
            <Run FontWeight="Bold">MaxWidth</Run>
            set) can be wrapped in a 
            <Run FontWeight="Bold">Grid</Run>
            to overcome this issue. See the 
            <Run FontWeight="Bold">SettingsPageExample</Run>
            for snippet.
        </TextBlock>

        <local:ControlExample x:Name="Example3" HeaderText="Settings Page example">
            <local:ControlExample.Example>
                <ScrollViewer Padding="20,0">
                    <!--  These styles can be referenced to create a consistent SettingsPage layout  -->
                    <FrameworkElement.Resources>
                        <!--  Spacing between cards  -->
                        <sys:Double x:Key="SettingsCardSpacing">4</sys:Double>
                        <!--  Style (inc. the correct spacing) of a section header  -->
                        <Style x:Key="SettingsSectionHeaderTextBlockStyle"
                            BasedOn="{StaticResource BodyStrongTextBlockStyle}"
                            TargetType="TextBlock">
                            <Style.Setters>
                                <Setter Property="Margin" Value="1,30,0,6" />
                            </Style.Setters>
                        </Style>
                    </FrameworkElement.Resources>
                    <Grid>
                        <ikw:SimpleStackPanel MaxWidth="1000"
                            HorizontalAlignment="Stretch"
                            Spacing="{StaticResource SettingsCardSpacing}">
                            <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                                Text="Section 1" />
                            <ui:SettingsCard Description="This is a default card, with the Header, HeaderIcon, Description and Content set"
                                    Header="This is the Header">
                                <ui:SettingsCard.HeaderIcon>
                                    <ui:FontIcon Glyph="&#xE799;" />
                                </ui:SettingsCard.HeaderIcon>
                                <ui:ToggleSwitch IsOn="True" />
                            </ui:SettingsCard>

                            <ui:SettingsExpander Description="The SettingsExpander has the same properties as a SettingsCard"
                                    Header="SettingsExpander">
                                <ui:SettingsExpander.HeaderIcon>
                                    <ui:FontIcon Glyph="&#xE91B;" />
                                </ui:SettingsExpander.HeaderIcon>

                                <Button Content="Content" Style="{StaticResource AccentButtonStyle}" />

                                <ui:SettingsExpander.Items>
                                    <ui:SettingsCard Header="A basic SettingsCard within an SettingsExpander">
                                        <Button Content="Button" />
                                    </ui:SettingsCard>
                                    <ui:SettingsCard Description="SettingsCard within an Expander can be made clickable too!"
                                        Header="This item can be clicked" IsClickEnabled="True" />
                                    <ui:SettingsCard ContentAlignment="Left">
                                        <CheckBox Content="Here the ContentAlignment is set to Left. This is great for e.g. CheckBoxes or RadioButtons" />
                                    </ui:SettingsCard>
                                </ui:SettingsExpander.Items>
                            </ui:SettingsExpander>

                            <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="Section 2" />
                            <ui:SettingsCard Description="Another card to show grouping of cards"
                                Header="Another SettingsCard">
                                <ui:SettingsCard.HeaderIcon>
                                    <ui:FontIcon Glyph="&#xE799;" />
                                </ui:SettingsCard.HeaderIcon>

                                <ComboBox SelectedIndex="0">
                                    <ComboBoxItem>Option 1</ComboBoxItem>
                                    <ComboBoxItem>Option 2</ComboBoxItem>
                                    <ComboBoxItem>Option 3</ComboBoxItem>
                                </ComboBox>
                            </ui:SettingsCard>

                            <ui:SettingsCard Description="Another card to show grouping of cards"
                                       Header="Yet another SettingsCard">
                                <ui:SettingsCard.HeaderIcon>
                                    <ui:FontIcon Glyph="&#xE768;" />
                                </ui:SettingsCard.HeaderIcon>
                                <Button Content="Content" />
                            </ui:SettingsCard>

                            <!--  Example 'About' section  -->
                            <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="About" />

                            <ui:SettingsExpander Description="© iNKORE Studios 2024. All rights reserved."
                                           Header="iNKORE.UI.WPF.Modern Gallery">
                                <ui:SettingsExpander.HeaderIcon>
                                    <Image Source="/Assets/WpfLibrary_256w.png"
                                           Width="20" Height="20" RenderOptions.BitmapScalingMode="HighQuality"/>
                                </ui:SettingsExpander.HeaderIcon>
                                <TextBlock Foreground="{DynamicResource {x:Static ui:ThemeKeys.TextFillColorSecondaryBrushKey}}"
                                    Text="{x:Static ui:ThemeManager.AssemblyVersion}" />
                                <ui:SettingsExpander.Items>
                                    <ui:SettingsCard HorizontalContentAlignment="Left"
                                               ContentAlignment="Left">
                                        <StackPanel Margin="-12,0,0,0"
                                        Orientation="Vertical">
                                            <ui:HyperlinkButton Content="Link 1" />
                                            <ui:HyperlinkButton Content="Link 2" />
                                            <ui:HyperlinkButton Content="Link 3" />
                                        </StackPanel>
                                    </ui:SettingsCard>
                                </ui:SettingsExpander.Items>
                            </ui:SettingsExpander>
                            <ui:HyperlinkButton Margin="0,8,0,0"
                                 Content="Send feedback" />
                        </ikw:SimpleStackPanel>
                    </Grid>
                </ScrollViewer>

            </local:ControlExample.Example>
        </local:ControlExample>


    </StackPanel>
</ui:Page>
