<ui:Page
    x:Class="iNKORE.UI.WPF.Modern.Gallery.Pages.Controls.Windows.GridViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Gallery"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
    Title="Grid View"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="ImageTemplate">
            <Image
                Width="190"
                Height="130"
                AutomationProperties.Name="{Binding Title}"
                Source="{Binding ImageLocation}"
                Stretch="UniformToFill" />
        </DataTemplate>

        <DataTemplate x:Key="IconTextTemplate">
            <StackPanel
                Width="280"
                MinHeight="160"
                AutomationProperties.Name="{Binding Title}">
                <StackPanel Orientation="Horizontal">
                    <Image
                        x:Name="image"
                        Width="18"
                        Margin="0,4,0,0"
                        Source="{Binding ImageLocation}"
                        Stretch="Uniform" />
                    <TextBlock
                        x:Name="title"
                        Margin="8,0,0,0"
                        Style="{DynamicResource BaseTextBlockStyle}"
                        Text="{Binding Title}" />
                </StackPanel>
                <TextBlock
                    Margin="0,4,8,0"
                    Style="{DynamicResource CaptionTextBlockStyle}"
                    Text="{Binding Description}"
                    TextTrimming="WordEllipsis"
                    TextWrapping="Wrap" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageTextTemplate">
            <Grid Width="280" AutomationProperties.Name="{Binding Title}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    Height="100"
                    VerticalAlignment="Top"
                    Source="{Binding ImageLocation}"
                    Stretch="Fill" />
                <StackPanel Grid.Column="1" Margin="8,0,0,8">
                    <TextBlock
                        Margin="0,0,0,8"
                        Style="{DynamicResource SubtitleTextBlockStyle}"
                        Text="{Binding Title}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource CaptionTextBlockStyle}" Text="{Binding Views}" />
                        <TextBlock Style="{DynamicResource CaptionTextBlockStyle}" Text=" Views " />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource CaptionTextBlockStyle}" Text="{Binding Likes}" />
                        <TextBlock Style="{DynamicResource CaptionTextBlockStyle}" Text=" Likes" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate">
            <StackPanel Width="240" Orientation="Horizontal">
                <TextBlock
                    Margin="8,0,0,0"
                    Style="{DynamicResource TitleTextBlockStyle}"
                    Text="{Binding Title}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageOverlayTemplate">
            <Grid Width="100" AutomationProperties.Name="{Binding Title}">
                <Image Source="{Binding ImageLocation}" Stretch="UniformToFill" />
                <Border
                    Height="40"
                    Padding="5,1,5,1"
                    VerticalAlignment="Bottom"
                    Background="{DynamicResource SystemControlBackgroundBaseMediumBrush}"
                    Opacity=".75">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Foreground="{DynamicResource SystemControlForegroundAltHighBrush}" Text="{Binding Title}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                Foreground="{DynamicResource SystemControlForegroundAltHighBrush}"
                                Style="{DynamicResource CaptionTextBlockStyle}"
                                Text="{Binding Likes}" />
                            <TextBlock
                                Foreground="{DynamicResource SystemControlForegroundAltHighBrush}"
                                Style="{DynamicResource CaptionTextBlockStyle}"
                                Text=" Likes" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <StackPanel>
        <local:ControlExample x:Name="Example1"
            HeaderText="Basic GridView with Simple DataTemplate">
            <StackPanel>
                <TextBlock Margin="0,0,0,15">
                    This is a basic GridView that has the full source code below.<LineBreak />
                    Other samples on this page display only the additional markup needed to customize the specific GridView.</TextBlock>
                <ui:GridView
                    x:Name="BasicGridView"
                    IsItemClickEnabled="True"
                    ItemClick="BasicGridView_ItemClick"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    SelectionMode="Single" />
                <TextBlock x:Name="ClickOutput0" Style="{DynamicResource OutputTextBlockStyle}" />
            </StackPanel>
        </local:ControlExample>

        <local:ControlExample x:Name="Example2" HeaderText="GridView with Layout Customization" Loaded="ControlExample_Loaded">
            <StackPanel>
                <TextBlock Margin="0,0,0,15" TextWrapping="Wrap">
                    Use the options on the right to control different layout customizations to the GridView below.
                </TextBlock>
                <ui:GridView x:Name="StyledGrid" ItemTemplate="{StaticResource ImageOverlayTemplate}">
                    <ui:GridView.ItemContainerStyle>
                        <Style TargetType="ui:GridViewItem">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                    </ui:GridView.ItemContainerStyle>

                    <ui:GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel
                                x:Name="MaxItemsWrapGrid"
                                Loaded="StyledGrid_InitWrapGrid"
                                Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ui:GridView.ItemsPanel>

                </ui:GridView>
            </StackPanel>

            <local:ControlExample.Options>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style x:Key="DefaultNumberBoxStyle" TargetType="ui:NumberBox">
                            <Setter Property="SpinButtonPlacementMode" Value="Inline" />
                            <Setter Property="SmallChange" Value="1" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="MaxWidth" Value="250" />
                            <Setter Property="Margin" Value="0,0,0,16" />
                        </Style>
                    </StackPanel.Resources>

                    <ui:NumberBox
                        x:Name="ColumnSpace"
                        AutomationProperties.Name="Space between columns"
                        Header="Space between columns"
                        Maximum="100"
                        Minimum="0"
                        Style="{DynamicResource DefaultNumberBoxStyle}"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="5" />

                    <ui:NumberBox
                        x:Name="RowSpace"
                        AutomationProperties.Name="Space between rows"
                        Header="Space between rows"
                        Maximum="100"
                        Minimum="0"
                        Style="{DynamicResource DefaultNumberBoxStyle}"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="5" />

                </StackPanel>
            </local:ControlExample.Options>
        </local:ControlExample>

        <local:ControlExample x:Name="Example3" HeaderText="Content inside of a GridView." Loaded="ControlExample2_Loaded">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ui:GridView
                    x:Name="ContentGridView"
                    AllowDrop="{Binding IsChecked, ElementName=DropCheckBox, Mode=OneWay}"
                    FlowDirection="LeftToRight"
                    IsItemClickEnabled="{Binding IsChecked, ElementName=ItemClickCheckBox, Mode=OneWay}"
                    IsMultiSelectCheckBoxEnabled="{Binding IsChecked, ElementName=MultiSelectCheckBoxCheckBox, Mode=OneWay}"
                    ItemClick="ContentGridView_ItemClick"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    SelectionChanged="ContentGridView_SelectionChanged" />

                <StackPanel Grid.Row="1">
                    <TextBlock x:Name="ClickOutput" Style="{StaticResource OutputTextBlockStyle}" />
                    <TextBlock x:Name="SelectionOutput" Style="{StaticResource OutputTextBlockStyle}" />
                </StackPanel>

            </Grid>
            <local:ControlExample.Options>
                <StackPanel x:Name="Control2">
                    <ui:RadioButtons Header="ItemTemplate">
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image"
                            GroupName="Template"
                            IsChecked="True"
                            Tag="ImageTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Icon/Text"
                            GroupName="Template"
                            Tag="IconTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image/Text"
                            GroupName="Template"
                            Tag="ImageTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Text"
                            GroupName="Template"
                            Tag="TextTemplate" />
                    </ui:RadioButtons>
                    <StackPanel>
                        <ToggleButton
                            Margin="0,8,0,0"
                            Click="FlowDirectionCheckBox_Click"
                            Content="Reverse FlowDirection" />
                        <TextBlock Margin="0,18,0,10" Text="GridView Properties" />
                        <TextBlock
                            MaxWidth="150"
                            FontSize="13"
                            TextWrapping="Wrap">
                            In order to drag, drop, and reorder items within the GridView, make sure the last three boxes are checked below.<LineBreak /></TextBlock>
                        <TextBlock
                            MaxWidth="150"
                            FontSize="13"
                            TextWrapping="Wrap">
                            Turning on IsItemClickEnabled will allow the user to click on an item (and print output below the GridView), regardless of selection mode.<LineBreak /></TextBlock>
                        <CheckBox x:Name="DropCheckBox" Content="AllowDrop" Click="DropCheckBox_Click"/>
                        <CheckBox
                            x:Name="ItemClickCheckBox"
                            Click="ItemClickCheckBox_Click"
                            Content="IsItemClickEnabled" />
                        <CheckBox x:Name="MultiSelectCheckBoxCheckBox" Content="IsMultiSelectCheckBoxEnabled" Click="MultiSelectCheckBoxCheckBox_Click"/>
                        <ComboBox
                            Margin="0,12,0,0"
                            ui:ControlHelper.Header="SelectionMode"
                            SelectedIndex="1"
                            SelectionChanged="SelectionModeComboBox_SelectionChanged">
                            <sys:String>None</sys:String>
                            <sys:String>Single</sys:String>
                            <sys:String>Multiple</sys:String>
                            <sys:String>Extended</sys:String>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <sys:String xml:space="preserve">

&lt;!-- The GridView used for this sample is shown below, with all of the necessary added properties. --&gt;
&lt;GridView 
    x:Name=&quot;ContentGridView&quot;
    ItemsSource=&quot;{x:Bind Items}&quot;
    ItemTemplate=&quot;{StaticResource $(ItemTemplate)}&quot;
    IsItemClickEnabled=&quot;$(IsItemClickEnabled)&quot;
    AllowDrop=&quot;$(CanDropItems)&quot;
    SelectionMode=&quot;$(SelectionMode)&quot;
    SelectionChanged=&quot;ContentGridView_SelectionChanged&quot;
    ItemClick=&quot;ContentGridView_ItemClick&quot; 
    FlowDirection=&quot;$(FlowDirection)&quot;/&gt;

&lt;!-- ContentGridView_SelectionChanged and ContentGridView_ItemClick are functions defined in the code-behind
to handle the events of when a selection changes on the GridView and when an item is clicked. --&gt;
                    
&lt;!-- The data template bound to this GridView's ItemTemplate property is based on which one you
select from the options on the right. The currently selected DataTemplate is: --&gt;

$(DisplayDT)
                </sys:String>
            </local:ControlExample.Xaml>
            <!--<local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution x:Name="itemTemplate" Key="ItemTemplate" Value="ImageTemplate" />
                <local:ControlExampleSubstitution Key="IsItemClickEnabled" Value="{x:Bind ContentGridView.IsItemClickEnabled, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanDragItems" Value="{x:Bind ContentGridView.CanDragItems, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanDropItems" Value="{x:Bind ContentGridView.AllowDrop, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanReorderItems" Value="{x:Bind ContentGridView.CanReorderItems, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind ContentGridView.SelectionMode, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="FlowDirection" Value="{x:Bind ContentGridView.FlowDirection, Mode=OneWay}" />
                <local:ControlExampleSubstitution x:Name="DisplayDT" Key="DisplayDT" />

            </local:ControlExample.Substitutions>-->
        </local:ControlExample>
    </StackPanel>
</ui:Page>
